version: "3.7"
services:

  gitea:
    image: gitea/gitea:1.15.4
    container_name: gitea
    environment:
      - USER_UID=1000
      - USER_GID=1000
    restart: always
    volumes:
      - ./gitea:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "3500:3000"
      - "222:22"
    
  nautobot:
    image: "networktocode/nautobot:1.1.4-py3.9"
    env_file:
      - "local.env"
    ports:
      - "8443:8443"
      - "8080:8080"
    restart: "unless-stopped"
  nautobot-worker:
    image: "networktocode/nautobot:1.1.4-py3.9"
    env_file:
      - "local.env"
    entrypoint: "nautobot-server rqworker"
    depends_on:
      - "nautobot"
    restart: "unless-stopped"
  celery_worker:
    image: "networktocode/nautobot:1.1.4-py3.9"
    entrypoint: "sh -c 'nautobot-server celery worker -l $$NAUTOBOT_LOG_LEVEL'"
    healthcheck:
      interval: "5s"
      timeout: "5s"
      start_period: "5s"
      retries: 3
      test: ["CMD", "nautobot-server", "health_check"]
    depends_on:
      - "nautobot"
      - "redis"
    env_file:
      - "./local.env"
    tty: true
  redis:
    image: "redis:alpine"
    env_file:
      - "local.env"
    command:
      - "sh"
      - "-c"  # this is to evaluate the $REDIS_PASSWORD from the env
      - "redis-server --appendonly yes --requirepass $$NAUTOBOT_REDIS_PASSWORD"  ## $$ because of docker-compose
    restart: "unless-stopped"
  postgres:
    image: "postgres:10"
    env_file:
      - "local.env"
    volumes:
      - "postgres_data:/var/lib/postgresql/data"
    restart: "unless-stopped"
 
  batfish:
    image: batfish/allinone
    container_name: batfish
    ports:
    - "9996:9996"
    - "9997:9997"
    - "9998:9998"
    - "8888:8888"

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./monitoring/loki:/etc/loki
    command: -config.file=/etc/loki/loki-config.yaml

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./monitoring/promtail:/etc/promtail
    command:  -config.file=/etc/promtail/promtail-config.yml
    ports:
      - "15140:1514"
      - "9080:9080"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    user: root
    environment:
      - GF_PANELS_DISABLE_SANITIZE_HTML=true
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=NetOps
    volumes:
      - ./monitoring/grafana/data:/var/lib/grafana
      - ./monitoring/grafana/provisioning/:/etc/grafana/provisioning/
    ports:
      - "3000:3000"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yaml

  arista-eapi-exporter:
    build: ./monitoring/arista-eapi-exporter
    image: arista-eapi-exporter
    container_name: arista-eapi-exporter
    ports:
      - 9200:9200
    volumes:
      - ./monitoring/arista-eapi-exporter/config.yml:/arista_exporter/config.yml

  syslog-ng:
    image: balabit/syslog-ng
    container_name: syslog-ng
    volumes:
      - ./monitoring/syslog-ng/syslog-ng.conf:/etc/syslog-ng/syslog-ng.conf
    ports:
      - 51400:514
    command: "--no-caps"

  consul:
    image: docker.io/bitnami/consul:1-debian-10
    container_name: consul
    ports:
      - '8300:8300'
      - '8301:8301'
      - '8301:8301/udp'
      - '8500:8500'
      - '8600:8600'
      - '8600:8600/udp'

volumes:
  postgres_data:


networks:
  default:
    external:
      name: lab_net-0
